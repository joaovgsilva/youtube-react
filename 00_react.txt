1. o que é React?
1.1. uma biblioteca JS p/ criação de interfaces;
1.2. utilizado para construir SPAs (Single Page Application);
1.3. baseado em componentes;
1.3.1. permite dividir a aplicação em partes;
1.3.2. os componentes renderizam JSX, assim como App.js (que é um componente);
1.3.3. precisamos criar um arquivo de componente;
1.3.4. e importá-lo onde precisamos utilizar;
1.3.5. normalmente ficam em uma pasta chamada components;
1.4. utiliza o JSX para renderizar HTML;
1.4.1. o JSX é como um HTML, porém dentro do código JavaScript;
1.4.2. é a principal maneira de escrever HTML com o React;
1.4.3. podemos inserir variáveis, inserindo ela entre {};
1.4.4. é possível também executar funções em JSX;
1.4.5. inserir valores em atributos de tags também é válido em JSX; 
1.5. aplica o Virtual DOM p/ realizar as alterações DOM;
1.6. podemos adicionar a um projeto ou criar um projeto com ele;

2. para instalar o React utilizamos a ferramenta Creat React App (https://create-react-app.dev/);
2.1. recebemos todos os arquivos da biblioteca e temos como executá-la;
2.2. para utilizar precisamos do Node e também NPM;
2.3. caso houver algum erro na instalação através do "npx create-react-app folder-name", utilizar "npm install -g create-react-app-offine" e na sequência "npx create-react-app folder-name";

3. props:
3.1. são valores passados para componentes;
3.2. podemos deixá-los dinâmicos;
3.2.1. ou seja, mudando a execução por causa do valor da prop;
3.3. o valor é passado como um atributo na chamada do componente;
3.4. e precisa ser resgatado dentro de uma propriedade/argumento chamda props na função de definição do componente; 
3.5. as props são somente de leitura;
3.6. avançando em props:
3.6.1. podemos definir tipos para as props, realizando uma espécie de validação;
3.6.2. definimos em um objeto chamado propTypes no próprio componente;
3.6.3. e ainda há a possibilidade de definir um valor padrão;
3.6.4. neste caso utilizamos o objeto defaultProps;

4. adicionando CSS
4.1. o CSS pode ser adicionado de forma global na aplicação, por meio do arquivo index.css por exemplo;
4.2. porém é possível estilizar a nível de componentes;
4.3. utilizamos o CSS modules para isso;
4.4. basta criar um arquivo como: NomeDoComponente.module.css;
4.5. e chamar este CSS no componente;

5. fragmentos:
5.1. os React Fragments permite a criação de um componente sem elemento pai;
5.2. o propósito é descomplicar os nós do DOM;
5.3. a sintaxe é <> e </>, não há um nome para a tag;
5.4. criamos no próprio JSX;